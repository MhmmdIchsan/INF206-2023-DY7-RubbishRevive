name: CI/CD Pipeline

on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]

jobs:
  build:
    runs-on: ubuntu-latest

    services:
      mysql:
        image: mysql:5.7
        env:
          MYSQL_ROOT_PASSWORD: root
          MYSQL_DATABASE: laravel
          MYSQL_USER: user
          MYSQL_PASSWORD: password
        ports:
          - 3306:3306
        options: --health-cmd="mysqladmin ping --silent" --health-interval=10s --health-timeout=5s --health-retries=3

    steps:
    # Checkout code
    - name: Check out the repository
      uses: actions/checkout@v4

    # Set up PHP with extensions
    - name: Set up PHP
      uses: shivammathur/setup-php@v2
      with:
        php-version: '8.2'
        extensions: mbstring, pdo, pdo_mysql, bcmath

    # Cache composer dependencies
    - name: Cache Composer dependencies
      uses: actions/cache@v3
      with:
        path: vendor
        key: ${{ runner.os }}-composer-${{ hashFiles('**/composer.lock') }}
        restore-keys: |
          ${{ runner.os }}-composer-

    # Install Composer dependencies
    - name: Install Composer dependencies
      run: composer install --no-progress --prefer-dist --optimize-autoloader

    # Copy .env file and set up the application key
    - name: Copy .env
      run: php -r "file_exists('.env') || copy('.env.example', '.env');"
    
    - name: Generate application key
      run: php artisan key:generate

    # Set permissions for Laravel storage and cache directories
    - name: Set directory permissions
      run: chmod -R 777 storage bootstrap/cache

    # Set up Node.js and Tailwind
    - name: Set up Node.js
      uses: actions/setup-node@v3
      with:
        node-version: '18.x'

    # Cache node_modules
    - name: Cache Node.js modules
      uses: actions/cache@v3
      with:
        path: node_modules
        key: ${{ runner.os }}-node-modules-${{ hashFiles('**/package-lock.json') }}
        restore-keys: |
          ${{ runner.os }}-node-modules-

    # Install Node.js dependencies
    - name: Install Node.js dependencies
      run: npm install

    # Build assets with Tailwind CSS
    - name: Build assets
      run: npm run build

    # Wait for MySQL service to be ready
    - name: Wait for MySQL
      run: sudo docker exec $(sudo docker ps -q) mysqladmin --user=user --password=password --host=127.0.0.1 ping --silent

    # Run migrations
    - name: Run migrations
      run: php artisan migrate --force
      env:
        DB_CONNECTION: mysql
        DB_HOST: 127.0.0.1
        DB_PORT: 3306
        DB_DATABASE: laravel
        DB_USERNAME: user
        DB_PASSWORD: password

    # Run tests
    - name: Run tests
      run: php artisan test
      env:
        DB_CONNECTION: mysql
        DB_HOST: 127.0.0.1
        DB_PORT: 3306
        DB_DATABASE: laravel
        DB_USERNAME: user
        DB_PASSWORD: password

    # Deploy to production (optional)
    # Uncomment the lines below if you want to automate deployment
    # - name: Deploy to server
    #   run: ssh user@yourserver.com 'cd /var/www/your-project && git pull && php artisan migrate --force && npm run production && php artisan config:cache'
